<?php

namespace App\Models;

use http\Env\Request;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Support\Str;

class Product extends Model
{
    use HasFactory, SoftDeletes;

    protected $with = ['variants'];
    protected $fillable = [
        'name', 'slug', 'user_id', 'category_id', 'image_path', 'price', 'quantity', 'status'
    ];

    public function getImageUrlAttribute()
    {
        if($this->image_path == null){
            return asset('assets/admin/assets/media/users/blank.png');
        }
        return asset('uploads/' . $this->image_path);
    }

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::creating(function(Product $product){
            $slug = Str::slug($product->name);
            $count = Product::where('slug', 'LIKE', $slug.'%')->count();

            if($count){
                $slug .= '-' . ( $count + 1 );
            }
            $product->slug = $slug;
        });
    }
    public function getPermalinkAttribute()
    {
        return route('product.details', $this->slug);
    }

    public function category()
    {
        return $this->belongsTo(Category::class, 'category_id', 'id')
            ->withDefault();
    }

    public function user()
    {
        return $this->belongsTo(User::class, 'user_id', 'id')
            ->withDefault();
    }

    public function variants()
    {
        return $this->hasMany(ProductVariants::class, 'product_id');
    }

}
